{"ast":null,"code":"\"use strict\";\n\nvar conversions = require(\"webidl-conversions\");\n\nvar utils = require(\"./utils.js\");\n\nexports.convert = function (globalObject, value) {\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      _ref$context = _ref.context,\n      context = _ref$context === void 0 ? \"The provided value\" : _ref$context;\n\n  if (typeof value !== \"function\") {\n    throw new globalObject.TypeError(context + \" is not a function\");\n  }\n\n  function invokeTheCallbackFunction(blob) {\n    var thisArg = utils.tryWrapperForImpl(this);\n    var callResult;\n    blob = utils.tryWrapperForImpl(blob);\n    callResult = Reflect.apply(value, thisArg, [blob]);\n  }\n\n  invokeTheCallbackFunction.construct = function (blob) {\n    blob = utils.tryWrapperForImpl(blob);\n    var callResult = Reflect.construct(value, [blob]);\n  };\n\n  invokeTheCallbackFunction[utils.wrapperSymbol] = value;\n  invokeTheCallbackFunction.objectReference = value;\n  return invokeTheCallbackFunction;\n};","map":null,"metadata":{},"sourceType":"script"}