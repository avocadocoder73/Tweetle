{"ast":null,"code":"\"use strict\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar hasOwnProp = Object.prototype.hasOwnProperty;\n\nvar namedPropertiesTracker = require(\"../named-properties-tracker\");\n\nvar NODE_TYPE = require(\"./node-type\");\n\nvar HTMLCollection = require(\"./generated/HTMLCollection\");\n\nvar _require = require(\"../utils\"),\n    treeOrderSorter = _require.treeOrderSorter;\n\nvar idlUtils = require(\"./generated/utils\");\n\nfunction isNamedPropertyElement(element) {\n  // (for the name attribute)\n  // use hasOwnProperty to make sure contentWindow comes from the prototype,\n  // and is not set directly on the node by a script.\n  if (\"contentWindow\" in element && !hasOwnProp.call(element, \"contentWindow\")) {\n    return true;\n  }\n\n  switch (element.nodeName) {\n    case \"A\":\n    case \"AREA\":\n    case \"EMBED\":\n    case \"FORM\":\n    case \"FRAMESET\":\n    case \"IMG\":\n    case \"OBJECT\":\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nfunction namedPropertyResolver(window, name, values) {\n  function getResult() {\n    var results = [];\n\n    var _iterator = _createForOfIteratorHelper(values().keys()),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var node = _step.value;\n\n        if (node.nodeType !== NODE_TYPE.ELEMENT_NODE) {\n          continue;\n        }\n\n        if (node.getAttributeNS(null, \"id\") === name) {\n          results.push(node);\n        } else if (node.getAttributeNS(null, \"name\") === name && isNamedPropertyElement(node)) {\n          results.push(node);\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    results.sort(treeOrderSorter);\n    return results;\n  }\n\n  var document = window._document;\n  var objects = HTMLCollection.create(window, [], {\n    element: idlUtils.implForWrapper(document.documentElement),\n    query: getResult\n  });\n  var length = objects.length;\n\n  for (var i = 0; i < length; ++i) {\n    var node = objects[i];\n\n    if (\"contentWindow\" in node && !hasOwnProp.call(node, \"contentWindow\") && node.getAttributeNS(null, \"name\") === name) {\n      return node.contentWindow;\n    }\n  }\n\n  if (length === 0) {\n    return undefined;\n  }\n\n  if (length === 1) {\n    return objects[0];\n  }\n\n  return objects;\n}\n\nexports.initializeWindow = function (window, windowProxy) {\n  namedPropertiesTracker.create(window, windowProxy, namedPropertyResolver.bind(null));\n};\n\nexports.elementAttributeModified = function (element, name, value, oldValue) {\n  if (!element._attached) {\n    return;\n  }\n\n  var useName = isNamedPropertyElement(element);\n\n  if (name === \"id\" || name === \"name\" && useName) {\n    var tracker = namedPropertiesTracker.get(element._ownerDocument._global); // (tracker will be null if the document has no Window)\n\n    if (tracker) {\n      if (name === \"id\" && (!useName || element.getAttributeNS(null, \"name\") !== oldValue)) {\n        tracker.untrack(oldValue, element);\n      }\n\n      if (name === \"name\" && element.getAttributeNS(null, \"id\") !== oldValue) {\n        tracker.untrack(oldValue, element);\n      }\n\n      tracker.track(value, element);\n    }\n  }\n};\n\nexports.nodeAttachedToDocument = function (node) {\n  if (node.nodeType !== NODE_TYPE.ELEMENT_NODE) {\n    return;\n  }\n\n  var tracker = namedPropertiesTracker.get(node._ownerDocument._global);\n\n  if (!tracker) {\n    return;\n  }\n\n  tracker.track(node.getAttributeNS(null, \"id\"), node);\n\n  if (isNamedPropertyElement(node)) {\n    tracker.track(node.getAttributeNS(null, \"name\"), node);\n  }\n};\n\nexports.nodeDetachedFromDocument = function (node) {\n  if (node.nodeType !== NODE_TYPE.ELEMENT_NODE) {\n    return;\n  }\n\n  var tracker = namedPropertiesTracker.get(node._ownerDocument._global);\n\n  if (!tracker) {\n    return;\n  }\n\n  tracker.untrack(node.getAttributeNS(null, \"id\"), node);\n\n  if (isNamedPropertyElement(node)) {\n    tracker.untrack(node.getAttributeNS(null, \"name\"), node);\n  }\n};","map":null,"metadata":{},"sourceType":"script"}