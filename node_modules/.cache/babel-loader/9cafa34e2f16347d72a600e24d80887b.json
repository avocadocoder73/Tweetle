{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\youno\\\\tweetle\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\youno\\\\tweetle\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\youno\\\\tweetle\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\youno\\\\tweetle\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"C:\\\\Users\\\\youno\\\\tweetle\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar _require = require(\"../../utils\"),\n    mixin = _require.mixin;\n\nvar SVGNumber = require(\"../generated/SVGNumber\");\n\nvar SVGGraphicsElementImpl = require(\"./SVGGraphicsElement-impl\").implementation;\n\nvar WindowEventHandlersImpl = require(\"./WindowEventHandlers-impl\").implementation;\n\nvar _require2 = require(\"../helpers/internal-constants\"),\n    domSymbolTree = _require2.domSymbolTree;\n\nvar _require3 = require(\"../node-type\"),\n    ELEMENT_NODE = _require3.ELEMENT_NODE;\n\nvar SVGSVGElementImpl = /*#__PURE__*/function (_SVGGraphicsElementIm) {\n  _inherits(SVGSVGElementImpl, _SVGGraphicsElementIm);\n\n  function SVGSVGElementImpl(globalObject, args, privateData) {\n    var _this;\n\n    _classCallCheck(this, SVGSVGElementImpl);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SVGSVGElementImpl).call(this, globalObject, args, privateData));\n\n    _this._proxyWindowEventsToWindow();\n\n    return _this;\n  }\n\n  _createClass(SVGSVGElementImpl, [{\n    key: \"createSVGNumber\",\n    value: function createSVGNumber() {\n      return SVGNumber.createImpl(this._globalObject, [], {});\n    }\n  }, {\n    key: \"getElementById\",\n    value: function getElementById(elementId) {\n      // TODO: optimize with _ids caching trick; see Document class.\n      var _iterator = _createForOfIteratorHelper(domSymbolTree.treeIterator(this)),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var node = _step.value;\n\n          if (node.nodeType === ELEMENT_NODE && node.getAttributeNS(null, \"id\") === elementId) {\n            return node;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return null;\n    }\n  }, {\n    key: \"suspendRedraw\",\n    value: function suspendRedraw() {\n      return 1;\n    }\n  }, {\n    key: \"unsuspendRedraw\",\n    value: function unsuspendRedraw() {}\n  }, {\n    key: \"unsuspendRedrawAll\",\n    value: function unsuspendRedrawAll() {}\n  }, {\n    key: \"forceRedraw\",\n    value: function forceRedraw() {}\n  }]);\n\n  return SVGSVGElementImpl;\n}(SVGGraphicsElementImpl);\n\nmixin(SVGSVGElementImpl.prototype, WindowEventHandlersImpl.prototype);\nmodule.exports = {\n  implementation: SVGSVGElementImpl\n};","map":null,"metadata":{},"sourceType":"script"}