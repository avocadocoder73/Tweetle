{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\youno\\\\tweetle\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\youno\\\\tweetle\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\youno\\\\tweetle\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\n\nvar _get = require(\"C:\\\\Users\\\\youno\\\\tweetle\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\youno\\\\tweetle\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"C:\\\\Users\\\\youno\\\\tweetle\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar _require = require(\"../helpers/internal-constants\"),\n    domSymbolTree = _require.domSymbolTree;\n\nvar _require2 = require(\"../helpers/namespaces\"),\n    SVG_NS = _require2.SVG_NS;\n\nvar _require3 = require(\"../../utils\"),\n    mixin = _require3.mixin;\n\nvar SVGAnimatedString = require(\"../generated/SVGAnimatedString\");\n\nvar ElementImpl = require(\"./Element-impl\").implementation;\n\nvar ElementCSSInlineStyleImpl = require(\"./ElementCSSInlineStyle-impl\").implementation;\n\nvar GlobalEventHandlersImpl = require(\"./GlobalEventHandlers-impl\").implementation;\n\nvar HTMLOrSVGElementImpl = require(\"./HTMLOrSVGElement-impl\").implementation;\n\nvar SVGElementImpl = /*#__PURE__*/function (_ElementImpl) {\n  _inherits(SVGElementImpl, _ElementImpl);\n\n  function SVGElementImpl(globalObject, args, privateData) {\n    var _this;\n\n    _classCallCheck(this, SVGElementImpl);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SVGElementImpl).call(this, globalObject, args, privateData));\n\n    _this._initHTMLOrSVGElement();\n\n    _this._initElementCSSInlineStyle();\n\n    _this._initGlobalEvents();\n\n    return _this;\n  } // Keep in sync with HTMLElement. https://github.com/jsdom/jsdom/issues/2599\n\n\n  _createClass(SVGElementImpl, [{\n    key: \"_attrModified\",\n    value: function _attrModified(name, value, oldValue) {\n      if (name === \"style\" && value !== oldValue && !this._settingCssText) {\n        this._settingCssText = true;\n        this._style.cssText = value;\n        this._settingCssText = false;\n      } else if (name.startsWith(\"on\")) {\n        this._globalEventChanged(name.substring(2));\n      }\n\n      _get(_getPrototypeOf(SVGElementImpl.prototype), \"_attrModified\", this).call(this, name, value, oldValue);\n    }\n  }, {\n    key: \"className\",\n    get: function get() {\n      return SVGAnimatedString.createImpl(this._globalObject, [], {\n        element: this,\n        attribute: \"class\"\n      });\n    }\n  }, {\n    key: \"ownerSVGElement\",\n    get: function get() {\n      var e = domSymbolTree.parent(this);\n\n      while (e && e.namespaceURI === SVG_NS) {\n        if (e.localName === \"svg\") {\n          return e;\n        }\n\n        e = domSymbolTree.parent(e);\n      }\n\n      return null;\n    }\n  }, {\n    key: \"viewportElement\",\n    get: function get() {\n      // TODO: <symbol>/<use> may make this different from ownerSVGElement.\n      return this.ownerSVGElement;\n    }\n  }]);\n\n  return SVGElementImpl;\n}(ElementImpl);\n\nSVGElementImpl.attributeRegistry = new Map();\nmixin(SVGElementImpl.prototype, ElementCSSInlineStyleImpl.prototype);\nmixin(SVGElementImpl.prototype, GlobalEventHandlersImpl.prototype);\nmixin(SVGElementImpl.prototype, HTMLOrSVGElementImpl.prototype);\nexports.implementation = SVGElementImpl;","map":null,"metadata":{},"sourceType":"script"}