{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"C:\\\\Users\\\\youno\\\\tweetle\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/defineProperty\");\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\youno\\\\tweetle\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\youno\\\\tweetle\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\youno\\\\tweetle\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\n\nvar _inherits = require(\"C:\\\\Users\\\\youno\\\\tweetle\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar conversions = require(\"webidl-conversions\");\n\nvar utils = require(\"./utils.js\");\n\nvar MouseEventInit = require(\"./MouseEventInit.js\");\n\nvar EventTarget = require(\"./EventTarget.js\");\n\nvar implSymbol = utils.implSymbol;\nvar ctorRegistrySymbol = utils.ctorRegistrySymbol;\n\nvar UIEvent = require(\"./UIEvent.js\");\n\nvar interfaceName = \"MouseEvent\";\n\nexports.is = function (value) {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\n\nexports.isImpl = function (value) {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\n\nexports.convert = function (globalObject, value) {\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      _ref$context = _ref.context,\n      context = _ref$context === void 0 ? \"The provided value\" : _ref$context;\n\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n\n  throw new globalObject.TypeError(\"\".concat(context, \" is not of type 'MouseEvent'.\"));\n};\n\nfunction makeWrapper(globalObject, newTarget) {\n  var proto;\n\n  if (newTarget !== undefined) {\n    proto = newTarget.prototype;\n  }\n\n  if (!utils.isObject(proto)) {\n    proto = globalObject[ctorRegistrySymbol][\"MouseEvent\"].prototype;\n  }\n\n  return Object.create(proto);\n}\n\nexports.create = function (globalObject, constructorArgs, privateData) {\n  var wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\n\nexports.createImpl = function (globalObject, constructorArgs, privateData) {\n  var wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\n\nexports._internalSetup = function (wrapper, globalObject) {\n  UIEvent._internalSetup(wrapper, globalObject);\n};\n\nexports.setup = function (wrapper, globalObject) {\n  var constructorArgs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var privateData = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  privateData.wrapper = wrapper;\n\n  exports._internalSetup(wrapper, globalObject);\n\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n\n  return wrapper;\n};\n\nexports.new = function (globalObject, newTarget) {\n  var wrapper = makeWrapper(globalObject, newTarget);\n\n  exports._internalSetup(wrapper, globalObject);\n\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n\n  return wrapper[implSymbol];\n};\n\nvar exposed = new Set([\"Window\"]);\n\nexports.install = function (globalObject, globalNames) {\n  if (!globalNames.some(function (globalName) {\n    return exposed.has(globalName);\n  })) {\n    return;\n  }\n\n  var ctorRegistry = utils.initCtorRegistry(globalObject);\n\n  var MouseEvent = /*#__PURE__*/function (_globalObject$UIEvent) {\n    _inherits(MouseEvent, _globalObject$UIEvent);\n\n    function MouseEvent(type) {\n      var _this;\n\n      _classCallCheck(this, MouseEvent);\n\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\"Failed to construct 'MouseEvent': 1 argument required, but only \".concat(arguments.length, \" present.\"));\n      }\n\n      var args = [];\n      {\n        var curArg = arguments[0];\n        curArg = conversions[\"DOMString\"](curArg, {\n          context: \"Failed to construct 'MouseEvent': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      {\n        var _curArg = arguments[1];\n        _curArg = MouseEventInit.convert(globalObject, _curArg, {\n          context: \"Failed to construct 'MouseEvent': parameter 2\"\n        });\n        args.push(_curArg);\n      }\n      return _possibleConstructorReturn(_this, exports.setup(Object.create((this instanceof MouseEvent ? this.constructor : void 0).prototype), globalObject, args));\n    }\n\n    _createClass(MouseEvent, [{\n      key: \"getModifierState\",\n      value: function getModifierState(keyArg) {\n        var _esValue$implSymbol;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new globalObject.TypeError(\"'getModifierState' called on an object that is not a valid instance of MouseEvent.\");\n        }\n\n        if (arguments.length < 1) {\n          throw new globalObject.TypeError(\"Failed to execute 'getModifierState' on 'MouseEvent': 1 argument required, but only \".concat(arguments.length, \" present.\"));\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = conversions[\"DOMString\"](curArg, {\n            context: \"Failed to execute 'getModifierState' on 'MouseEvent': parameter 1\",\n            globals: globalObject\n          });\n          args.push(curArg);\n        }\n        return (_esValue$implSymbol = esValue[implSymbol]).getModifierState.apply(_esValue$implSymbol, args);\n      }\n    }, {\n      key: \"initMouseEvent\",\n      value: function initMouseEvent(typeArg) {\n        var _esValue$implSymbol2;\n\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new globalObject.TypeError(\"'initMouseEvent' called on an object that is not a valid instance of MouseEvent.\");\n        }\n\n        if (arguments.length < 1) {\n          throw new globalObject.TypeError(\"Failed to execute 'initMouseEvent' on 'MouseEvent': 1 argument required, but only \".concat(arguments.length, \" present.\"));\n        }\n\n        var args = [];\n        {\n          var curArg = arguments[0];\n          curArg = conversions[\"DOMString\"](curArg, {\n            context: \"Failed to execute 'initMouseEvent' on 'MouseEvent': parameter 1\",\n            globals: globalObject\n          });\n          args.push(curArg);\n        }\n        {\n          var _curArg2 = arguments[1];\n\n          if (_curArg2 !== undefined) {\n            _curArg2 = conversions[\"boolean\"](_curArg2, {\n              context: \"Failed to execute 'initMouseEvent' on 'MouseEvent': parameter 2\",\n              globals: globalObject\n            });\n          } else {\n            _curArg2 = false;\n          }\n\n          args.push(_curArg2);\n        }\n        {\n          var _curArg3 = arguments[2];\n\n          if (_curArg3 !== undefined) {\n            _curArg3 = conversions[\"boolean\"](_curArg3, {\n              context: \"Failed to execute 'initMouseEvent' on 'MouseEvent': parameter 3\",\n              globals: globalObject\n            });\n          } else {\n            _curArg3 = false;\n          }\n\n          args.push(_curArg3);\n        }\n        {\n          var _curArg4 = arguments[3];\n\n          if (_curArg4 !== undefined) {\n            if (_curArg4 === null || _curArg4 === undefined) {\n              _curArg4 = null;\n            } else {\n              _curArg4 = utils.tryImplForWrapper(_curArg4);\n            }\n          } else {\n            _curArg4 = null;\n          }\n\n          args.push(_curArg4);\n        }\n        {\n          var _curArg5 = arguments[4];\n\n          if (_curArg5 !== undefined) {\n            _curArg5 = conversions[\"long\"](_curArg5, {\n              context: \"Failed to execute 'initMouseEvent' on 'MouseEvent': parameter 5\",\n              globals: globalObject\n            });\n          } else {\n            _curArg5 = 0;\n          }\n\n          args.push(_curArg5);\n        }\n        {\n          var _curArg6 = arguments[5];\n\n          if (_curArg6 !== undefined) {\n            _curArg6 = conversions[\"long\"](_curArg6, {\n              context: \"Failed to execute 'initMouseEvent' on 'MouseEvent': parameter 6\",\n              globals: globalObject\n            });\n          } else {\n            _curArg6 = 0;\n          }\n\n          args.push(_curArg6);\n        }\n        {\n          var _curArg7 = arguments[6];\n\n          if (_curArg7 !== undefined) {\n            _curArg7 = conversions[\"long\"](_curArg7, {\n              context: \"Failed to execute 'initMouseEvent' on 'MouseEvent': parameter 7\",\n              globals: globalObject\n            });\n          } else {\n            _curArg7 = 0;\n          }\n\n          args.push(_curArg7);\n        }\n        {\n          var _curArg8 = arguments[7];\n\n          if (_curArg8 !== undefined) {\n            _curArg8 = conversions[\"long\"](_curArg8, {\n              context: \"Failed to execute 'initMouseEvent' on 'MouseEvent': parameter 8\",\n              globals: globalObject\n            });\n          } else {\n            _curArg8 = 0;\n          }\n\n          args.push(_curArg8);\n        }\n        {\n          var _curArg9 = arguments[8];\n\n          if (_curArg9 !== undefined) {\n            _curArg9 = conversions[\"long\"](_curArg9, {\n              context: \"Failed to execute 'initMouseEvent' on 'MouseEvent': parameter 9\",\n              globals: globalObject\n            });\n          } else {\n            _curArg9 = 0;\n          }\n\n          args.push(_curArg9);\n        }\n        {\n          var _curArg10 = arguments[9];\n\n          if (_curArg10 !== undefined) {\n            _curArg10 = conversions[\"boolean\"](_curArg10, {\n              context: \"Failed to execute 'initMouseEvent' on 'MouseEvent': parameter 10\",\n              globals: globalObject\n            });\n          } else {\n            _curArg10 = 0;\n          }\n\n          args.push(_curArg10);\n        }\n        {\n          var _curArg11 = arguments[10];\n\n          if (_curArg11 !== undefined) {\n            _curArg11 = conversions[\"boolean\"](_curArg11, {\n              context: \"Failed to execute 'initMouseEvent' on 'MouseEvent': parameter 11\",\n              globals: globalObject\n            });\n          } else {\n            _curArg11 = 0;\n          }\n\n          args.push(_curArg11);\n        }\n        {\n          var _curArg12 = arguments[11];\n\n          if (_curArg12 !== undefined) {\n            _curArg12 = conversions[\"boolean\"](_curArg12, {\n              context: \"Failed to execute 'initMouseEvent' on 'MouseEvent': parameter 12\",\n              globals: globalObject\n            });\n          } else {\n            _curArg12 = 0;\n          }\n\n          args.push(_curArg12);\n        }\n        {\n          var _curArg13 = arguments[12];\n\n          if (_curArg13 !== undefined) {\n            _curArg13 = conversions[\"boolean\"](_curArg13, {\n              context: \"Failed to execute 'initMouseEvent' on 'MouseEvent': parameter 13\",\n              globals: globalObject\n            });\n          } else {\n            _curArg13 = 0;\n          }\n\n          args.push(_curArg13);\n        }\n        {\n          var _curArg14 = arguments[13];\n\n          if (_curArg14 !== undefined) {\n            _curArg14 = conversions[\"short\"](_curArg14, {\n              context: \"Failed to execute 'initMouseEvent' on 'MouseEvent': parameter 14\",\n              globals: globalObject\n            });\n          } else {\n            _curArg14 = 0;\n          }\n\n          args.push(_curArg14);\n        }\n        {\n          var _curArg15 = arguments[14];\n\n          if (_curArg15 !== undefined) {\n            if (_curArg15 === null || _curArg15 === undefined) {\n              _curArg15 = null;\n            } else {\n              _curArg15 = EventTarget.convert(globalObject, _curArg15, {\n                context: \"Failed to execute 'initMouseEvent' on 'MouseEvent': parameter 15\"\n              });\n            }\n          } else {\n            _curArg15 = null;\n          }\n\n          args.push(_curArg15);\n        }\n        return (_esValue$implSymbol2 = esValue[implSymbol]).initMouseEvent.apply(_esValue$implSymbol2, args);\n      }\n    }, {\n      key: \"screenX\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new globalObject.TypeError(\"'get screenX' called on an object that is not a valid instance of MouseEvent.\");\n        }\n\n        return esValue[implSymbol][\"screenX\"];\n      }\n    }, {\n      key: \"screenY\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new globalObject.TypeError(\"'get screenY' called on an object that is not a valid instance of MouseEvent.\");\n        }\n\n        return esValue[implSymbol][\"screenY\"];\n      }\n    }, {\n      key: \"clientX\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new globalObject.TypeError(\"'get clientX' called on an object that is not a valid instance of MouseEvent.\");\n        }\n\n        return esValue[implSymbol][\"clientX\"];\n      }\n    }, {\n      key: \"clientY\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new globalObject.TypeError(\"'get clientY' called on an object that is not a valid instance of MouseEvent.\");\n        }\n\n        return esValue[implSymbol][\"clientY\"];\n      }\n    }, {\n      key: \"ctrlKey\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new globalObject.TypeError(\"'get ctrlKey' called on an object that is not a valid instance of MouseEvent.\");\n        }\n\n        return esValue[implSymbol][\"ctrlKey\"];\n      }\n    }, {\n      key: \"shiftKey\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new globalObject.TypeError(\"'get shiftKey' called on an object that is not a valid instance of MouseEvent.\");\n        }\n\n        return esValue[implSymbol][\"shiftKey\"];\n      }\n    }, {\n      key: \"altKey\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new globalObject.TypeError(\"'get altKey' called on an object that is not a valid instance of MouseEvent.\");\n        }\n\n        return esValue[implSymbol][\"altKey\"];\n      }\n    }, {\n      key: \"metaKey\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new globalObject.TypeError(\"'get metaKey' called on an object that is not a valid instance of MouseEvent.\");\n        }\n\n        return esValue[implSymbol][\"metaKey\"];\n      }\n    }, {\n      key: \"button\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new globalObject.TypeError(\"'get button' called on an object that is not a valid instance of MouseEvent.\");\n        }\n\n        return esValue[implSymbol][\"button\"];\n      }\n    }, {\n      key: \"buttons\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new globalObject.TypeError(\"'get buttons' called on an object that is not a valid instance of MouseEvent.\");\n        }\n\n        return esValue[implSymbol][\"buttons\"];\n      }\n    }, {\n      key: \"relatedTarget\",\n      get: function get() {\n        var esValue = this !== null && this !== undefined ? this : globalObject;\n\n        if (!exports.is(esValue)) {\n          throw new globalObject.TypeError(\"'get relatedTarget' called on an object that is not a valid instance of MouseEvent.\");\n        }\n\n        return utils.tryWrapperForImpl(esValue[implSymbol][\"relatedTarget\"]);\n      }\n    }]);\n\n    return MouseEvent;\n  }(globalObject.UIEvent);\n\n  Object.defineProperties(MouseEvent.prototype, _defineProperty({\n    getModifierState: {\n      enumerable: true\n    },\n    initMouseEvent: {\n      enumerable: true\n    },\n    screenX: {\n      enumerable: true\n    },\n    screenY: {\n      enumerable: true\n    },\n    clientX: {\n      enumerable: true\n    },\n    clientY: {\n      enumerable: true\n    },\n    ctrlKey: {\n      enumerable: true\n    },\n    shiftKey: {\n      enumerable: true\n    },\n    altKey: {\n      enumerable: true\n    },\n    metaKey: {\n      enumerable: true\n    },\n    button: {\n      enumerable: true\n    },\n    buttons: {\n      enumerable: true\n    },\n    relatedTarget: {\n      enumerable: true\n    }\n  }, Symbol.toStringTag, {\n    value: \"MouseEvent\",\n    configurable: true\n  }));\n  ctorRegistry[interfaceName] = MouseEvent;\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: MouseEvent\n  });\n};\n\nvar Impl = require(\"../events/MouseEvent-impl.js\");","map":null,"metadata":{},"sourceType":"script"}