{"ast":null,"code":"\"use strict\";\n\nvar _objectSpread = require(\"C:\\\\Users\\\\youno\\\\tweetle\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/objectSpread\");\n\nvar produceXMLSerialization = require(\"w3c-xmlserializer\");\n\nvar parse5 = require(\"parse5\");\n\nvar DOMException = require(\"domexception/webidl2js-wrapper\");\n\nvar utils = require(\"../generated/utils\");\n\nvar treeAdapter = require(\"./parse5-adapter-serialization\");\n\nvar NODE_TYPE = require(\"../node-type\");\n\nmodule.exports.fragmentSerialization = function (node, _ref) {\n  var outer = _ref.outer,\n      requireWellFormed = _ref.requireWellFormed,\n      globalObject = _ref.globalObject;\n  var contextDocument = node.nodeType === NODE_TYPE.DOCUMENT_NODE ? node : node._ownerDocument;\n\n  if (contextDocument._parsingMode === \"html\") {\n    var config = _objectSpread({}, contextDocument._parseOptions, {\n      treeAdapter: treeAdapter\n    });\n\n    return outer ? parse5.serializeOuter(node, config) : parse5.serialize(node, config);\n  }\n\n  var childNodes = outer ? [node] : node.childNodes;\n\n  try {\n    var serialized = \"\";\n\n    for (var i = 0; i < childNodes.length; ++i) {\n      serialized += produceXMLSerialization(utils.wrapperForImpl(childNodes[i] || childNodes.item(i)), {\n        requireWellFormed: requireWellFormed\n      });\n    }\n\n    return serialized;\n  } catch (e) {\n    throw DOMException.create(globalObject, [e.message, \"InvalidStateError\"]);\n  }\n};","map":null,"metadata":{},"sourceType":"script"}