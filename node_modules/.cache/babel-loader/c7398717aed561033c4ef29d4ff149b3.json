{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\youno\\\\tweetle\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\youno\\\\tweetle\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\youno\\\\tweetle\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\youno\\\\tweetle\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"C:\\\\Users\\\\youno\\\\tweetle\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\n\nvar MouseEvent = require(\"../generated/MouseEvent\");\n\nvar _require = require(\"../helpers/internal-constants\"),\n    domSymbolTree = _require.domSymbolTree;\n\nvar NODE_TYPE = require(\"../node-type\");\n\nvar _require2 = require(\"../helpers/form-controls\"),\n    isLabelable = _require2.isLabelable,\n    isDisabled = _require2.isDisabled,\n    isInteractiveContent = _require2.isInteractiveContent;\n\nvar _require3 = require(\"../helpers/node\"),\n    isInclusiveAncestor = _require3.isInclusiveAncestor;\n\nvar _require4 = require(\"../helpers/events\"),\n    fireAnEvent = _require4.fireAnEvent;\n\nfunction sendClickToAssociatedNode(node) {\n  fireAnEvent(\"click\", node, MouseEvent, {\n    bubbles: true,\n    cancelable: true,\n    view: node.ownerDocument ? node.ownerDocument.defaultView : null,\n    screenX: 0,\n    screenY: 0,\n    clientX: 0,\n    clientY: 0,\n    button: 0,\n    detail: 1,\n    relatedTarget: null\n  });\n}\n\nvar HTMLLabelElementImpl = /*#__PURE__*/function (_HTMLElementImpl) {\n  _inherits(HTMLLabelElementImpl, _HTMLElementImpl);\n\n  function HTMLLabelElementImpl(globalObject, args, privateData) {\n    var _this;\n\n    _classCallCheck(this, HTMLLabelElementImpl);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(HTMLLabelElementImpl).call(this, globalObject, args, privateData));\n    _this._hasActivationBehavior = true;\n    return _this;\n  }\n\n  _createClass(HTMLLabelElementImpl, [{\n    key: \"_activationBehavior\",\n    value: function _activationBehavior(event) {\n      // Check if the event's target is an inclusive descendant of any interactive content descendant of this <label>.\n      // If so, do nothing.\n      if (event.target && event.target !== this && isInclusiveAncestor(this, event.target)) {\n        var _iterator = _createForOfIteratorHelper(domSymbolTree.ancestorsIterator(event.target)),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var ancestor = _step.value;\n\n            if (ancestor === this) {\n              break;\n            }\n\n            if (isInteractiveContent(ancestor)) {\n              return;\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n\n      var node = this.control;\n\n      if (node && !isDisabled(node)) {\n        // Check if the control is an inclusive ancestor of the event's target (and has already received this event).\n        // If so, do nothing.\n        // See https://github.com/whatwg/html/issues/5415.\n        if (event.target && isInclusiveAncestor(node, event.target)) {\n          return;\n        }\n\n        sendClickToAssociatedNode(node);\n      }\n    }\n  }, {\n    key: \"control\",\n    get: function get() {\n      if (this.hasAttributeNS(null, \"for\")) {\n        var forValue = this.getAttributeNS(null, \"for\");\n\n        if (forValue === \"\") {\n          return null;\n        }\n\n        var root = this.getRootNode({});\n\n        var _iterator2 = _createForOfIteratorHelper(domSymbolTree.treeIterator(root)),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var descendant = _step2.value;\n\n            if (descendant.nodeType === NODE_TYPE.ELEMENT_NODE && descendant.getAttributeNS(null, \"id\") === forValue) {\n              return isLabelable(descendant) ? descendant : null;\n            }\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n\n        return null;\n      }\n\n      var _iterator3 = _createForOfIteratorHelper(domSymbolTree.treeIterator(this)),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var _descendant = _step3.value;\n\n          if (isLabelable(_descendant)) {\n            return _descendant;\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      return null;\n    }\n  }, {\n    key: \"form\",\n    get: function get() {\n      var node = this.control;\n\n      if (node) {\n        return node.form;\n      }\n\n      return null;\n    }\n  }]);\n\n  return HTMLLabelElementImpl;\n}(HTMLElementImpl);\n\nmodule.exports = {\n  implementation: HTMLLabelElementImpl\n};","map":null,"metadata":{},"sourceType":"script"}