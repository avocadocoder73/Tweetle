{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\youno\\\\tweetle\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\youno\\\\tweetle\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TwitterV2IncludesHelper = void 0;\n/**\n * Provide helpers for `.includes` of a v2 API result.\n * Needed expansions for a method to work are specified (*`like this`*).\n */\n\nvar TwitterV2IncludesHelper = /*#__PURE__*/function () {\n  function TwitterV2IncludesHelper(result) {\n    _classCallCheck(this, TwitterV2IncludesHelper);\n\n    this.result = result;\n  }\n  /* Tweets */\n\n\n  _createClass(TwitterV2IncludesHelper, [{\n    key: \"tweetById\",\n    value: function tweetById(id) {\n      return TwitterV2IncludesHelper.tweetById(this.result, id);\n    }\n  }, {\n    key: \"retweet\",\n\n    /** Retweet associated with the given tweet (*`referenced_tweets.id`*) */\n    value: function retweet(tweet) {\n      return TwitterV2IncludesHelper.retweet(this.result, tweet);\n    }\n    /** Retweet associated with the given tweet (*`referenced_tweets.id`*) */\n\n  }, {\n    key: \"quote\",\n\n    /** Quoted tweet associated with the given tweet (*`referenced_tweets.id`*) */\n    value: function quote(tweet) {\n      return TwitterV2IncludesHelper.quote(this.result, tweet);\n    }\n    /** Quoted tweet associated with the given tweet (*`referenced_tweets.id`*) */\n\n  }, {\n    key: \"repliedTo\",\n\n    /** Tweet whose has been answered by the given tweet (*`referenced_tweets.id`*) */\n    value: function repliedTo(tweet) {\n      return TwitterV2IncludesHelper.repliedTo(this.result, tweet);\n    }\n    /** Tweet whose has been answered by the given tweet (*`referenced_tweets.id`*) */\n\n  }, {\n    key: \"author\",\n\n    /** Tweet author user object of the given tweet (*`author_id`* or *`referenced_tweets.id.author_id`*) */\n    value: function author(tweet) {\n      return TwitterV2IncludesHelper.author(this.result, tweet);\n    }\n    /** Tweet author user object of the given tweet (*`author_id`* or *`referenced_tweets.id.author_id`*) */\n\n  }, {\n    key: \"repliedToAuthor\",\n\n    /** Tweet author user object of the tweet answered by the given tweet (*`in_reply_to_user_id`*) */\n    value: function repliedToAuthor(tweet) {\n      return TwitterV2IncludesHelper.repliedToAuthor(this.result, tweet);\n    }\n    /** Tweet author user object of the tweet answered by the given tweet (*`in_reply_to_user_id`*) */\n\n  }, {\n    key: \"userById\",\n    value: function userById(id) {\n      return TwitterV2IncludesHelper.userById(this.result, id);\n    }\n  }, {\n    key: \"pinnedTweet\",\n\n    /** Pinned tweet of the given user (*`pinned_tweet_id`*) */\n    value: function pinnedTweet(user) {\n      return TwitterV2IncludesHelper.pinnedTweet(this.result, user);\n    }\n    /** Pinned tweet of the given user (*`pinned_tweet_id`*) */\n\n  }, {\n    key: \"medias\",\n\n    /** Medias associated with the given tweet (*`attachments.media_keys`*) */\n    value: function medias(tweet) {\n      return TwitterV2IncludesHelper.medias(this.result, tweet);\n    }\n    /** Medias associated with the given tweet (*`attachments.media_keys`*) */\n\n  }, {\n    key: \"poll\",\n\n    /** Poll associated with the given tweet (*`attachments.poll_ids`*) */\n    value: function poll(tweet) {\n      return TwitterV2IncludesHelper.poll(this.result, tweet);\n    }\n    /** Poll associated with the given tweet (*`attachments.poll_ids`*) */\n\n  }, {\n    key: \"place\",\n\n    /** Place associated with the given tweet (*`geo.place_id`*) */\n    value: function place(tweet) {\n      return TwitterV2IncludesHelper.place(this.result, tweet);\n    }\n    /** Place associated with the given tweet (*`geo.place_id`*) */\n\n  }, {\n    key: \"listOwner\",\n\n    /* Lists */\n\n    /** List owner of the given list (*`owner_id`*) */\n    value: function listOwner(list) {\n      return TwitterV2IncludesHelper.listOwner(this.result, list);\n    }\n    /** List owner of the given list (*`owner_id`*) */\n\n  }, {\n    key: \"spaceCreator\",\n\n    /* Spaces */\n\n    /** Creator of the given space (*`creator_id`*) */\n    value: function spaceCreator(space) {\n      return TwitterV2IncludesHelper.spaceCreator(this.result, space);\n    }\n    /** Creator of the given space (*`creator_id`*) */\n\n  }, {\n    key: \"spaceHosts\",\n\n    /** Current hosts of the given space (*`host_ids`*) */\n    value: function spaceHosts(space) {\n      return TwitterV2IncludesHelper.spaceHosts(this.result, space);\n    }\n    /** Current hosts of the given space (*`host_ids`*) */\n\n  }, {\n    key: \"spaceSpeakers\",\n\n    /** Current speakers of the given space (*`speaker_ids`*) */\n    value: function spaceSpeakers(space) {\n      return TwitterV2IncludesHelper.spaceSpeakers(this.result, space);\n    }\n    /** Current speakers of the given space (*`speaker_ids`*) */\n\n  }, {\n    key: \"spaceInvitedUsers\",\n\n    /** Current invited users of the given space (*`invited_user_ids`*) */\n    value: function spaceInvitedUsers(space) {\n      return TwitterV2IncludesHelper.spaceInvitedUsers(this.result, space);\n    }\n    /** Current invited users of the given space (*`invited_user_ids`*) */\n\n  }, {\n    key: \"tweets\",\n    get: function get() {\n      return TwitterV2IncludesHelper.tweets(this.result);\n    }\n  }, {\n    key: \"users\",\n\n    /* Users */\n    get: function get() {\n      return TwitterV2IncludesHelper.users(this.result);\n    }\n  }, {\n    key: \"media\",\n\n    /* Medias */\n    get: function get() {\n      return TwitterV2IncludesHelper.media(this.result);\n    }\n  }, {\n    key: \"polls\",\n\n    /* Polls */\n    get: function get() {\n      return TwitterV2IncludesHelper.polls(this.result);\n    }\n  }, {\n    key: \"places\",\n\n    /* Places */\n    get: function get() {\n      return TwitterV2IncludesHelper.places(this.result);\n    }\n  }], [{\n    key: \"tweets\",\n    value: function tweets(result) {\n      var _a, _b;\n\n      return (_b = (_a = result.includes) === null || _a === void 0 ? void 0 : _a.tweets) !== null && _b !== void 0 ? _b : [];\n    }\n  }, {\n    key: \"tweetById\",\n    value: function tweetById(result, id) {\n      return this.tweets(result).find(function (tweet) {\n        return tweet.id === id;\n      });\n    }\n  }, {\n    key: \"retweet\",\n    value: function retweet(result, tweet) {\n      var _a;\n\n      var retweetIds = ((_a = tweet.referenced_tweets) !== null && _a !== void 0 ? _a : []).filter(function (ref) {\n        return ref.type === 'retweeted';\n      }).map(function (ref) {\n        return ref.id;\n      });\n      return this.tweets(result).find(function (t) {\n        return retweetIds.includes(t.id);\n      });\n    }\n  }, {\n    key: \"quote\",\n    value: function quote(result, tweet) {\n      var _a;\n\n      var quoteIds = ((_a = tweet.referenced_tweets) !== null && _a !== void 0 ? _a : []).filter(function (ref) {\n        return ref.type === 'quoted';\n      }).map(function (ref) {\n        return ref.id;\n      });\n      return this.tweets(result).find(function (t) {\n        return quoteIds.includes(t.id);\n      });\n    }\n  }, {\n    key: \"repliedTo\",\n    value: function repliedTo(result, tweet) {\n      var _a;\n\n      var repliesIds = ((_a = tweet.referenced_tweets) !== null && _a !== void 0 ? _a : []).filter(function (ref) {\n        return ref.type === 'replied_to';\n      }).map(function (ref) {\n        return ref.id;\n      });\n      return this.tweets(result).find(function (t) {\n        return repliesIds.includes(t.id);\n      });\n    }\n  }, {\n    key: \"author\",\n    value: function author(result, tweet) {\n      var authorId = tweet.author_id;\n      return authorId ? this.users(result).find(function (u) {\n        return u.id === authorId;\n      }) : undefined;\n    }\n  }, {\n    key: \"repliedToAuthor\",\n    value: function repliedToAuthor(result, tweet) {\n      var inReplyUserId = tweet.in_reply_to_user_id;\n      return inReplyUserId ? this.users(result).find(function (u) {\n        return u.id === inReplyUserId;\n      }) : undefined;\n    }\n  }, {\n    key: \"users\",\n    value: function users(result) {\n      var _a, _b;\n\n      return (_b = (_a = result.includes) === null || _a === void 0 ? void 0 : _a.users) !== null && _b !== void 0 ? _b : [];\n    }\n  }, {\n    key: \"userById\",\n    value: function userById(result, id) {\n      return this.users(result).find(function (u) {\n        return u.id === id;\n      });\n    }\n  }, {\n    key: \"pinnedTweet\",\n    value: function pinnedTweet(result, user) {\n      return user.pinned_tweet_id ? this.tweets(result).find(function (t) {\n        return t.id === user.pinned_tweet_id;\n      }) : undefined;\n    }\n  }, {\n    key: \"media\",\n    value: function media(result) {\n      var _a, _b;\n\n      return (_b = (_a = result.includes) === null || _a === void 0 ? void 0 : _a.media) !== null && _b !== void 0 ? _b : [];\n    }\n  }, {\n    key: \"medias\",\n    value: function medias(result, tweet) {\n      var _a, _b;\n\n      var keys = (_b = (_a = tweet.attachments) === null || _a === void 0 ? void 0 : _a.media_keys) !== null && _b !== void 0 ? _b : [];\n      return this.media(result).filter(function (m) {\n        return keys.includes(m.media_key);\n      });\n    }\n  }, {\n    key: \"polls\",\n    value: function polls(result) {\n      var _a, _b;\n\n      return (_b = (_a = result.includes) === null || _a === void 0 ? void 0 : _a.polls) !== null && _b !== void 0 ? _b : [];\n    }\n  }, {\n    key: \"poll\",\n    value: function poll(result, tweet) {\n      var _a, _b;\n\n      var pollIds = (_b = (_a = tweet.attachments) === null || _a === void 0 ? void 0 : _a.poll_ids) !== null && _b !== void 0 ? _b : [];\n\n      if (pollIds.length) {\n        var pollId = pollIds[0];\n        return this.polls(result).find(function (p) {\n          return p.id === pollId;\n        });\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"places\",\n    value: function places(result) {\n      var _a, _b;\n\n      return (_b = (_a = result.includes) === null || _a === void 0 ? void 0 : _a.places) !== null && _b !== void 0 ? _b : [];\n    }\n  }, {\n    key: \"place\",\n    value: function place(result, tweet) {\n      var _a;\n\n      var placeId = (_a = tweet.geo) === null || _a === void 0 ? void 0 : _a.place_id;\n      return placeId ? this.places(result).find(function (p) {\n        return p.id === placeId;\n      }) : undefined;\n    }\n  }, {\n    key: \"listOwner\",\n    value: function listOwner(result, list) {\n      var creatorId = list.owner_id;\n      return creatorId ? this.users(result).find(function (p) {\n        return p.id === creatorId;\n      }) : undefined;\n    }\n  }, {\n    key: \"spaceCreator\",\n    value: function spaceCreator(result, space) {\n      var creatorId = space.creator_id;\n      return creatorId ? this.users(result).find(function (p) {\n        return p.id === creatorId;\n      }) : undefined;\n    }\n  }, {\n    key: \"spaceHosts\",\n    value: function spaceHosts(result, space) {\n      var _a;\n\n      var hostIds = (_a = space.host_ids) !== null && _a !== void 0 ? _a : [];\n      return this.users(result).filter(function (u) {\n        return hostIds.includes(u.id);\n      });\n    }\n  }, {\n    key: \"spaceSpeakers\",\n    value: function spaceSpeakers(result, space) {\n      var _a;\n\n      var speakerIds = (_a = space.speaker_ids) !== null && _a !== void 0 ? _a : [];\n      return this.users(result).filter(function (u) {\n        return speakerIds.includes(u.id);\n      });\n    }\n  }, {\n    key: \"spaceInvitedUsers\",\n    value: function spaceInvitedUsers(result, space) {\n      var _a;\n\n      var invitedUserIds = (_a = space.invited_user_ids) !== null && _a !== void 0 ? _a : [];\n      return this.users(result).filter(function (u) {\n        return invitedUserIds.includes(u.id);\n      });\n    }\n  }]);\n\n  return TwitterV2IncludesHelper;\n}();\n\nexports.TwitterV2IncludesHelper = TwitterV2IncludesHelper;","map":null,"metadata":{},"sourceType":"script"}