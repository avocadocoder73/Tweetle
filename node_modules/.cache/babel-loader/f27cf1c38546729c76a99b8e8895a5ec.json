{"ast":null,"code":"\"use strict\";\n\nvar _objectSpread = require(\"C:\\\\Users\\\\youno\\\\tweetle\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/objectSpread\");\n\nvar _asyncToGenerator = require(\"C:\\\\Users\\\\youno\\\\tweetle\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncToGenerator\");\n\nvar _defineProperty = require(\"C:\\\\Users\\\\youno\\\\tweetle\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/defineProperty\");\n\nvar _objectWithoutProperties = require(\"C:\\\\Users\\\\youno\\\\tweetle\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/objectWithoutProperties\");\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\youno\\\\tweetle\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\youno\\\\tweetle\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\youno\\\\tweetle\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\youno\\\\tweetle\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"C:\\\\Users\\\\youno\\\\tweetle\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TwitterApiv1 = void 0;\n\nvar globals_1 = require(\"../globals\");\n\nvar dm_paginator_v1_1 = require(\"../paginators/dm.paginator.v1\");\n\nvar types_1 = require(\"../types\");\n\nvar client_v1_write_1 = __importDefault(require(\"./client.v1.write\"));\n/**\n * Twitter v1.1 API client with read/write/DMs rights.\n */\n\n\nvar TwitterApiv1 = /*#__PURE__*/function (_client_v1_write_1$de) {\n  _inherits(TwitterApiv1, _client_v1_write_1$de);\n\n  function TwitterApiv1() {\n    var _this;\n\n    _classCallCheck(this, TwitterApiv1);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TwitterApiv1).apply(this, arguments));\n    _this._prefix = globals_1.API_V1_1_PREFIX;\n    return _this;\n  }\n  /**\n   * Get a client with read/write rights.\n   */\n\n\n  _createClass(TwitterApiv1, [{\n    key: \"sendDm\",\n\n    /* Direct messages */\n    // Part: Sending and receiving events\n\n    /**\n     * Publishes a new message_create event resulting in a Direct Message sent to a specified user from the authenticating user.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages/sending-and-receiving/api-reference/new-event\n     */\n    value: function sendDm(_ref) {\n      var recipient_id = _ref.recipient_id,\n          custom_profile_id = _ref.custom_profile_id,\n          params = _objectWithoutProperties(_ref, [\"recipient_id\", \"custom_profile_id\"]);\n\n      var args = {\n        event: _defineProperty({\n          type: types_1.EDirectMessageEventTypeV1.Create\n        }, types_1.EDirectMessageEventTypeV1.Create, {\n          target: {\n            recipient_id: recipient_id\n          },\n          message_data: params\n        })\n      };\n\n      if (custom_profile_id) {\n        args.event[types_1.EDirectMessageEventTypeV1.Create].custom_profile_id = custom_profile_id;\n      }\n\n      return this.post('direct_messages/events/new.json', args, {\n        forceBodyMode: 'json'\n      });\n    }\n    /**\n     * Returns a single Direct Message event by the given id.\n     *\n     * https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages/sending-and-receiving/api-reference/get-event\n     */\n\n  }, {\n    key: \"getDmEvent\",\n    value: function getDmEvent(id) {\n      return this.get('direct_messages/events/show.json', {\n        id: id\n      });\n    }\n    /**\n     * Deletes the direct message specified in the required ID parameter.\n     * The authenticating user must be the recipient of the specified direct message.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages/sending-and-receiving/api-reference/delete-message-event\n     */\n\n  }, {\n    key: \"deleteDm\",\n    value: function deleteDm(id) {\n      return this.delete('direct_messages/events/destroy.json', {\n        id: id\n      });\n    }\n    /**\n     * Returns all Direct Message events (both sent and received) within the last 30 days.\n     * Sorted in reverse-chronological order.\n     *\n     * https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages/sending-and-receiving/api-reference/list-events\n     */\n\n  }, {\n    key: \"listDmEvents\",\n    value: function () {\n      var _listDmEvents = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var args,\n            queryParams,\n            initialRq,\n            _args = arguments;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                args = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n                queryParams = _objectSpread({}, args);\n                _context.next = 4;\n                return this.get('direct_messages/events/list.json', queryParams, {\n                  fullResponse: true\n                });\n\n              case 4:\n                initialRq = _context.sent;\n                return _context.abrupt(\"return\", new dm_paginator_v1_1.DmEventsV1Paginator({\n                  realData: initialRq.data,\n                  rateLimit: initialRq.rateLimit,\n                  instance: this,\n                  queryParams: queryParams\n                }));\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function listDmEvents() {\n        return _listDmEvents.apply(this, arguments);\n      }\n\n      return listDmEvents;\n    }() // Part: Welcome messages (events)\n\n    /**\n     * Creates a new Welcome Message that will be stored and sent in the future from the authenticating user in defined circumstances.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages/welcome-messages/api-reference/new-welcome-message\n     */\n\n  }, {\n    key: \"newWelcomeDm\",\n    value: function newWelcomeDm(name, data) {\n      var args = _defineProperty({}, types_1.EDirectMessageEventTypeV1.WelcomeCreate, {\n        name: name,\n        message_data: data\n      });\n\n      return this.post('direct_messages/welcome_messages/new.json', args, {\n        forceBodyMode: 'json'\n      });\n    }\n    /**\n     * Returns a Welcome Message by the given id.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages/welcome-messages/api-reference/get-welcome-message\n     */\n\n  }, {\n    key: \"getWelcomeDm\",\n    value: function getWelcomeDm(id) {\n      return this.get('direct_messages/welcome_messages/show.json', {\n        id: id\n      });\n    }\n    /**\n     * Deletes a Welcome Message by the given id.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages/welcome-messages/api-reference/delete-welcome-message\n     */\n\n  }, {\n    key: \"deleteWelcomeDm\",\n    value: function deleteWelcomeDm(id) {\n      return this.delete('direct_messages/welcome_messages/destroy.json', {\n        id: id\n      });\n    }\n    /**\n     * Updates a Welcome Message by the given ID.\n     * Updates to the welcome_message object are atomic.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages/welcome-messages/api-reference/update-welcome-message\n     */\n\n  }, {\n    key: \"updateWelcomeDm\",\n    value: function updateWelcomeDm(id, data) {\n      var args = {\n        message_data: data\n      };\n      return this.put('direct_messages/welcome_messages/update.json', args, {\n        forceBodyMode: 'json',\n        query: {\n          id: id\n        }\n      });\n    }\n    /**\n     * Returns all Direct Message events (both sent and received) within the last 30 days.\n     * Sorted in reverse-chronological order.\n     *\n     * https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages/sending-and-receiving/api-reference/list-events\n     */\n\n  }, {\n    key: \"listWelcomeDms\",\n    value: function () {\n      var _listWelcomeDms = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var args,\n            queryParams,\n            initialRq,\n            _args3 = arguments;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                args = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : {};\n                queryParams = _objectSpread({}, args);\n                _context2.next = 4;\n                return this.get('direct_messages/welcome_messages/list.json', queryParams, {\n                  fullResponse: true\n                });\n\n              case 4:\n                initialRq = _context2.sent;\n                return _context2.abrupt(\"return\", new dm_paginator_v1_1.WelcomeDmV1Paginator({\n                  realData: initialRq.data,\n                  rateLimit: initialRq.rateLimit,\n                  instance: this,\n                  queryParams: queryParams\n                }));\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function listWelcomeDms() {\n        return _listWelcomeDms.apply(this, arguments);\n      }\n\n      return listWelcomeDms;\n    }() // Part: Welcome message (rules)\n\n    /**\n     * Creates a new Welcome Message Rule that determines which Welcome Message will be shown in a given conversation.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages/welcome-messages/api-reference/new-welcome-message-rule\n     */\n\n  }, {\n    key: \"newWelcomeDmRule\",\n    value: function newWelcomeDmRule(welcomeMessageId) {\n      return this.post('direct_messages/welcome_messages/rules/new.json', {\n        welcome_message_rule: {\n          welcome_message_id: welcomeMessageId\n        }\n      }, {\n        forceBodyMode: 'json'\n      });\n    }\n    /**\n     * Returns a Welcome Message Rule by the given id.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages/welcome-messages/api-reference/get-welcome-message-rule\n     */\n\n  }, {\n    key: \"getWelcomeDmRule\",\n    value: function getWelcomeDmRule(id) {\n      return this.get('direct_messages/welcome_messages/rules/show.json', {\n        id: id\n      });\n    }\n    /**\n     * Deletes a Welcome Message Rule by the given id.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages/welcome-messages/api-reference/delete-welcome-message-rule\n     */\n\n  }, {\n    key: \"deleteWelcomeDmRule\",\n    value: function deleteWelcomeDmRule(id) {\n      return this.delete('direct_messages/welcome_messages/rules/destroy.json', {\n        id: id\n      });\n    }\n    /**\n     * Retrieves all welcome DM rules for this account.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages/welcome-messages/api-reference/list-welcome-message-rules\n     */\n\n  }, {\n    key: \"listWelcomeDmRules\",\n    value: function () {\n      var _listWelcomeDmRules = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var args,\n            queryParams,\n            _args4 = arguments;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                args = _args4.length > 0 && _args4[0] !== undefined ? _args4[0] : {};\n                queryParams = _objectSpread({}, args);\n                return _context3.abrupt(\"return\", this.get('direct_messages/welcome_messages/rules/list.json', queryParams));\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function listWelcomeDmRules() {\n        return _listWelcomeDmRules.apply(this, arguments);\n      }\n\n      return listWelcomeDmRules;\n    }()\n    /**\n     * Set the current showed welcome message for logged account ; wrapper for Welcome DM rules.\n     * Test if a rule already exists, delete if any, then create a rule for current message ID.\n     *\n     * If you don't have already a welcome message, create it with `.newWelcomeMessage`.\n     */\n\n  }, {\n    key: \"setWelcomeDm\",\n    value: function () {\n      var _setWelcomeDm = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(welcomeMessageId) {\n        var deleteAssociatedWelcomeDmWhenDeletingRule,\n            _a,\n            existingRules,\n            _iterator,\n            _step,\n            rule,\n            _args5 = arguments;\n\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                deleteAssociatedWelcomeDmWhenDeletingRule = _args5.length > 1 && _args5[1] !== undefined ? _args5[1] : true;\n                _context4.next = 3;\n                return this.listWelcomeDmRules();\n\n              case 3:\n                existingRules = _context4.sent;\n\n                if (!((_a = existingRules.welcome_message_rules) === null || _a === void 0 ? void 0 : _a.length)) {\n                  _context4.next = 25;\n                  break;\n                }\n\n                _iterator = _createForOfIteratorHelper(existingRules.welcome_message_rules);\n                _context4.prev = 6;\n\n                _iterator.s();\n\n              case 8:\n                if ((_step = _iterator.n()).done) {\n                  _context4.next = 17;\n                  break;\n                }\n\n                rule = _step.value;\n                _context4.next = 12;\n                return this.deleteWelcomeDmRule(rule.id);\n\n              case 12:\n                if (!deleteAssociatedWelcomeDmWhenDeletingRule) {\n                  _context4.next = 15;\n                  break;\n                }\n\n                _context4.next = 15;\n                return this.deleteWelcomeDm(rule.welcome_message_id);\n\n              case 15:\n                _context4.next = 8;\n                break;\n\n              case 17:\n                _context4.next = 22;\n                break;\n\n              case 19:\n                _context4.prev = 19;\n                _context4.t0 = _context4[\"catch\"](6);\n\n                _iterator.e(_context4.t0);\n\n              case 22:\n                _context4.prev = 22;\n\n                _iterator.f();\n\n                return _context4.finish(22);\n\n              case 25:\n                return _context4.abrupt(\"return\", this.newWelcomeDmRule(welcomeMessageId));\n\n              case 26:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[6, 19, 22, 25]]);\n      }));\n\n      function setWelcomeDm(_x) {\n        return _setWelcomeDm.apply(this, arguments);\n      }\n\n      return setWelcomeDm;\n    }() // Part: Read indicator\n\n    /**\n     * Marks a message as read in the recipient’s Direct Message conversation view with the sender.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages/typing-indicator-and-read-receipts/api-reference/new-read-receipt\n     */\n\n  }, {\n    key: \"markDmAsRead\",\n    value: function markDmAsRead(lastEventId, recipientId) {\n      return this.post('direct_messages/mark_read.json', {\n        last_read_event_id: lastEventId,\n        recipient_id: recipientId\n      }, {\n        forceBodyMode: 'url'\n      });\n    }\n    /**\n     * Displays a visual typing indicator in the recipient’s Direct Message conversation view with the sender.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages/typing-indicator-and-read-receipts/api-reference/new-typing-indicator\n     */\n\n  }, {\n    key: \"indicateDmTyping\",\n    value: function indicateDmTyping(recipientId) {\n      return this.post('direct_messages/indicate_typing.json', {\n        recipient_id: recipientId\n      }, {\n        forceBodyMode: 'url'\n      });\n    } // Part: Images\n\n    /**\n     * Get a single image attached to a direct message. TwitterApi client must be logged with OAuth 1.0a.\n     * https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages/message-attachments/guides/retrieving-media\n     */\n\n  }, {\n    key: \"downloadDmImage\",\n    value: function () {\n      var _downloadDmImage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(urlOrDm) {\n        var attachment, data;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (!(typeof urlOrDm !== 'string')) {\n                  _context5.next = 5;\n                  break;\n                }\n\n                attachment = urlOrDm[types_1.EDirectMessageEventTypeV1.Create].message_data.attachment;\n\n                if (attachment) {\n                  _context5.next = 4;\n                  break;\n                }\n\n                throw new Error('The given direct message doesn\\'t contain any attachment');\n\n              case 4:\n                urlOrDm = attachment.media_url_https;\n\n              case 5:\n                _context5.next = 7;\n                return this.get(urlOrDm, undefined, {\n                  forceParseMode: 'buffer',\n                  prefix: ''\n                });\n\n              case 7:\n                data = _context5.sent;\n\n                if (data.length) {\n                  _context5.next = 10;\n                  break;\n                }\n\n                throw new Error('Image not found. Make sure you are logged with credentials able to access direct messages, and check the URL.');\n\n              case 10:\n                return _context5.abrupt(\"return\", data);\n\n              case 11:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function downloadDmImage(_x2) {\n        return _downloadDmImage.apply(this, arguments);\n      }\n\n      return downloadDmImage;\n    }()\n  }, {\n    key: \"readWrite\",\n    get: function get() {\n      return this;\n    }\n  }]);\n\n  return TwitterApiv1;\n}(client_v1_write_1.default);\n\nexports.TwitterApiv1 = TwitterApiv1;\nexports.default = TwitterApiv1;","map":null,"metadata":{},"sourceType":"script"}